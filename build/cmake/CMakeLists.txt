PROJECT(CPU-T)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.6)

IF(COMMAND cmake_policy)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

SET(CPUT_MAJOR_VERSION 0)
SET(CPUT_MINOR_VERSION 1)
SET(CPUT_PATCH_VERSION 0)
SET(CPUT_VERSION ${CPUT_MAJOR_VERSION}.${CPUT_MINOR_VERSION}.${CPUT_PATCH_VERSION})

SET(KLAYGE_PATH "" CACHE STRING "Path of KlayGE.")

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

IF(WIN32)
	IF(CMAKE_GENERATOR MATCHES "Win64")
		SET(CPUT_ARCH_NAME "x64")
		SET(CPUT_VS_PLATFORM_NAME "x64")
	ELSEIF(CMAKE_GENERATOR MATCHES "ARM")
		SET(CPUT_ARCH_NAME "arm")
		SET(CPUT_VS_PLATFORM_NAME "ARM")
	ELSE()
		SET(CPUT_ARCH_NAME "x86")
		SET(CPUT_VS_PLATFORM_NAME "Win32")
	ENDIF()
	SET(CPUT_PLATFORM_NAME "win")
ENDIF()
IF(UNIX)
	IF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
		SET(CPUT_ARCH_NAME "x64")
	ELSE()
		SET(CPUT_ARCH_NAME "x86")
	ENDIF()
	SET(CPUT_PLATFORM_NAME "linux")
ENDIF()
SET(CPUT_PLATFORM_NAME ${CPUT_PLATFORM_NAME}_${CPUT_ARCH_NAME})

IF(WIN32)
	IF(MSVC)
		ADD_DEFINITIONS(-DUNICODE -D_UNICODE)

		SET(CMAKE_C_FLAGS "/DWIN32 /D_WINDOWS /W4 /WX /GR /EHsc /wd4503")
		SET(CMAKE_CXX_FLAGS "/DWIN32 /D_WINDOWS /W4 /WX /GR /EHsc /wd4503")
		SET(CMAKE_CXX_FLAGS_DEBUG "/D_DEBUG /MTd /Zi /Ob0 /Od /RTC1")
		SET(CMAKE_CXX_FLAGS_MINSIZEREL "/MT /O1 /Ob1 /D NDEBUG")
		SET(CMAKE_CXX_FLAGS_RELEASE "/MT /O2 /Ob2 /D NDEBUG")
		SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/MT /Zi /O2 /Ob1 /D NDEBUG")
		SET(CMAKE_EXE_LINKER_FLAGS "/WX")

		SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "/DEBUG /INCREMENTAL")
		SET(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "/DEBUG /INCREMENTAL")

		SET(CPUT_COMPILER_NAME "vc")
		IF(MSVC_VERSION GREATER 1600)
			SET(CPUT_COMPILER_VERSION "11")
		ELSEIF(MSVC_VERSION GREATER 1500)
			SET(CPUT_COMPILER_VERSION "10")
		ELSEIF(MSVC_VERSION GREATER 1400)
			SET(CPUT_COMPILER_VERSION "9")
		ENDIF()

		SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /fp:fast /GS-")
		SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /fp:fast /GS-")
		SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /fp:fast /GS-")

		IF(MSVC_VERSION GREATER 1500)
			SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MP")
			SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /MP")
			SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /MP")

			SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /LARGEADDRESSAWARE")
			SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /LARGEADDRESSAWARE")
		ENDIF()
		IF(MSVC_VERSION GREATER 1600)
			SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Qpar")
			SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /Qpar")
			SET(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_CXX_FLAGS_MINSIZEREL} /Qpar")
		ENDIF()
	ENDIF()
	IF(MINGW)
		SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -W -Wall -Wno-unused -std=c11")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W -Wall -Wno-unused -std=c++11")
		SET(CMAKE_MODULE_LINKER_FLAGS_RELEASE "-s")

		SET(CPUT_COMPILER_NAME "mgw")
		SET(CPUT_COMPILER_VERSION "")
	ENDIF()
ELSE()
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -W -Wall -Wno-unused -std=c11")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -W -Wall -Wno-unused -std=c++11")
	SET(CMAKE_MODULE_LINKER_FLAGS_RELEASE "-s")

	SET(CPUT_COMPILER_NAME "gcc")
	SET(CPUT_COMPILER_VERSION "")
ENDIF()

# Set postfix
SET(CMAKE_DEBUG_POSTFIX "_d" CACHE STRING "add a postfix, usually d on windows")
SET(CMAKE_RELEASE_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_RELWITHDEBINFO_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_MINSIZEREL_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")


# Main settings and dependencies
FIND_PATH(CPUT_PROJECT_DIR CPU-T.ico PATHS ../../)

SET(CPUT_OUTPUT_DIR "${CPUT_PROJECT_DIR}/lib/${CPUT_PLATFORM_NAME}")
SET(CPUT_BIN_DIR "${CPUT_PROJECT_DIR}/bin/${CPUT_PLATFORM_NAME}")


# create vcproj.user file for Visual Studio to set debug working directory
FUNCTION(CPUT_CREATE_VCPROJ_USERFILE TARGETNAME)
	IF(MSVC)
		SET(SYSTEM_NAME $ENV{USERDOMAIN})
		SET(USER_NAME $ENV{USERNAME})

		IF(MSVC_VERSION GREATER 1500)
			CONFIGURE_FILE(
				${CPUT_PROJECT_DIR}/build/cmake/VisualStudio2010UserFile.vcxproj.user.in
				${CMAKE_CURRENT_BINARY_DIR}/${TARGETNAME}.vcxproj.user
				@ONLY
			)
		ELSEIF(MSVC_VERSION GREATER 1400)
			CONFIGURE_FILE(
				${CPUT_PROJECT_DIR}/build/cmake/VisualStudio2008UserFile.vcproj.user.in
				${CMAKE_CURRENT_BINARY_DIR}/${TARGETNAME}.vcproj.${SYSTEM_NAME}.${USER_NAME}.user
				@ONLY
			)
		ELSEIF(MSVC_VERSION GREATER 1300)
			CONFIGURE_FILE(
				${CPUT_PROJECT_DIR}/build/cmake/VisualStudio2005UserFile.vcproj.user.in
				${CMAKE_CURRENT_BINARY_DIR}/${TARGETNAME}.vcproj.${SYSTEM_NAME}.${USER_NAME}.user
				@ONLY
			)
		ENDIF()
	ENDIF()
ENDFUNCTION()

FUNCTION(ADD_PRECOMPILED_HEADER TARGET_NAME PRECOMPILEDHEADER PRECOMPILEDSOURCE)
	IF(MSVC)
		GET_FILENAME_COMPONENT(PRECOMPILEDBASENAME ${PRECOMPILEDHEADER} NAME_WE)
		SET(PCHOUTPUT "${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/${PRECOMPILEDBASENAME}.pch")

		SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES COMPILE_FLAGS "/Yu\"${PRECOMPILEDHEADER}\" /Fp\"${PCHOUTPUT}\"" OBJECT_DEPENDS "${PCHOUTPUT}")
		SET_SOURCE_FILES_PROPERTIES(${PRECOMPILEDSOURCE} PROPERTIES COMPILE_FLAGS "/Yc\"${PRECOMPILEDHEADER}\" /Fp\"${PCHOUTPUT}\"" OBJECT_OUTPUTS "${PCHOUTPUT}")
	ENDIF()
ENDFUNCTION()

FUNCTION(ADD_POST_BUILD TARGET_NAME)
	SET(TARGET_FOLDER ${CPUT_BIN_DIR})

	ADD_CUSTOM_COMMAND(TARGET ${TARGET_NAME}
		POST_BUILD
		COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_FILE_DIR:${TARGET_NAME}>/$<TARGET_FILE_NAME:${TARGET_NAME}> ${TARGET_FOLDER})
ENDFUNCTION()

ADD_SUBDIRECTORY(CPUTSDK)
ADD_SUBDIRECTORY(CPUTWin)
